Установка UR
ubuntu 20.0

sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt install curl 
sudo curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -
sudo apt update
sudo apt install ros-noetic-desktop-full
sudo apt install ros-noetic-slam-gmapping
sudo apt search ros-noetic
echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
source ~/.bashrc
sudo apt install build-essential git python3-pip python3-rosdep
sudo apt install python3-rosinstall python3-rosinstall-generator python3-wstool
sudo rosdep update

sudo rosdep init
sudo rosdep update

mkdir -p ~/ros_ws/src
cd ~/ros_ws/src
catkin_create_pkg test --rosdistro ROSDISTRO
cd test
mkdir /launch   # not root
mkdir /world    # not root   
cd launch
touch test.launch
cd ..
cd world
touch mir.world

в папке launch заходим в файл test, в этом файле пишем:
<?xml version="1.0" encoding=""UTF-8"?>

<launch>
    <arg name="paused" default="true"/>
    <!--<arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="recording" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="server_required" default="false"/>
    <arg name="gui_required" default="false"/>-->
    <arg name="world" default="$(find test)/world/mir.world"/>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world)"/>
        <arg name="paused" value="$(arg paused)"/>
    </include>
</launch>

в папке world заходим в файл mir, пишем следующее:
<?xml version="1.0"?>

<sdf version="1.5">
    <world name="default">
        <include>
            <uri>model://ground_plane</uri>
        </include>

        <include>
            <uri>model://sun</uri>
        </include>
    </world>
</sdf>

cd ~/ros_ws
sudo catkin_make
source devel/setup.bash

roslaunch test test.launch
########################################################################################################################
1. Установка ROS

Рекомендуется использовать ROS Noetic для Ubuntu 20.04 или ROS Melodic для Ubuntu 18.04.
Пример для Ubuntu 20.04 (ROS Noetic):

bash
Copy
# Добавление репозитория ROS
sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# Обновление и установка ROS
sudo apt update
sudo apt install ros-noetic-desktop-full
После установки добавьте ROS в переменные среды:

bash
Copy
echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
source ~/.bashrc
2. Установка Gazebo

Gazebo обычно устанавливается вместе с ROS. Если нет:

bash
Copy
sudo apt install gazebo11 libgazebo11-dev
3. Создание рабочего пространства ROS

bash
Copy
mkdir -p ~/catkin_ws/src
cd ~/catkin_ws
catkin_make
source devel/setup.bash
4. Установка пакетов Universal Robots для Gazebo

Клонируйте репозитории с поддержкой Gazebo:

bash
Copy
cd ~/catkin_ws/src

# Основные пакеты Universal Robots
git clone -b noetic-devel https://github.com/ros-industrial/universal_robot.git

# Драйверы и утилиты
git clone https://github.com/UniversalRobots/Universal_Robots_ROS_Driver.git
git clone -b noetic-devel https://github.com/ros-industrial/ur_msgs.git

# Пакет для интеграции с Gazebo
git clone https://github.com/ros-simulation/gazebo_ros_pkgs.git
5. Установка зависимостей

bash
Copy
sudo apt install ros-noetic-moveit ros-noetic-joint-state-controller ros-noetic-effort-controllers
sudo apt install ros-noetic-gazebo-ros-control ros-noetic-ros-controllers
rosdep update
cd ~/catkin_ws
rosdep install --from-paths src --ignore-src -r -y
6. Сборка рабочего пространства

bash
Copy
# cd ~/catkin_ws
catkin_make
source devel/setup.bash
7. Запуск симуляции в Gazebo

Для запуска модели UR5 в Gazebo:

bash
Copy
roslaunch ur_gazebo ur5.launch
Эта команда:

Запустит Gazebo.
Загрузит модель UR5.
Активирует контроллеры для управления роботом.
8. Управление роботом через MoveIt

Для управления роботом с помощью MoveIt (планирование движений):

bash
Copy
roslaunch ur5_moveit_config ur5_moveit_planning_execution.launch sim:=true
9. Пример тестового скрипта

Отправьте тестовую цель для движения:

bash
Copy
roslaunch ur5_moveit_config moveit_planning_execution.launch sim:=true
rosrun ur5_moveit_config move_group_interface_demo.py
Возможные проблемы и решения

Ошибки при запуске Gazebo:
Убедитесь, что все зависимости установлены (ros-noetic-gazebo-ros-pkgs).
Проверьте, что модели роботов загружены (иногда Gazebo требует скачивания ассетов).
Отсутствие контроллеров:
Убедитесь, что пакеты ros-noetic-ros-controllers установлены.
Ошибки MoveIt:
Пересоберите рабочее пространство: catkin_make clean && catkin_make.
Полезные команды

Просмотр топиков:
bash
Copy
rostopic list
Ручное управление через GUI:
bash
Copy
rosrun rqt_joint_trajectory_controller rqt_joint_trajectory_controller



########################################################################################################################
https://github.com/lihuang3/ur5_ROS-Gazebo
https://github.com/cambel/ur3/tree/noetic-devel

export GAZEBO_MODEL_PATH=~/ros_ws/src/test/models:${GAZEBO_MODEL_PATH}

sdformat.org


mkdir -p ~/ros_ws/src
cd ~/ros_ws/src
sudo apt install git
git clone https://github.com/cambel/ur3 ros_ur3
cd ~/ros_ws
rosinstall ~/ros_ws/src /opt/ros/noetic src/ros_ur3/dependencies.rosinstall
sudo apt update
sudo apt install python3-rosdep2
rosdep fix-permissions
sudo rosdep update
sudo rosdep install --from-paths src --ignore-src --rosdistro=noetic -y

cd ~/ros_ws/
sudo apt install python3-catkin-tools python3-osrf-pycommon
catkin build

git clone https://github.com/cambel/ur_ikfast.git
cd ur_ikfast
sudo apt install python3-pip
pip3 install -e .



/bin/bash -c 'source /home/clover/catkin_ws/devel/setup.bash; roslaunch clover_simulation simulator.launch'

sudo apt install python3-roslaunch

source path_to_my_workspace/workspace_name/devel/setup.bash

########################################################################################################################


теперь заходим в папку catkin_ws и в теминале пишем catkin_make
source devel/setup.bash
roslauch name pusk.launch
